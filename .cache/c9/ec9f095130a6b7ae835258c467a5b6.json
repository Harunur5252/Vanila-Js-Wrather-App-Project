{"id":"node_modules/regenerator-transform/lib/visit.js","dependencies":[{"name":"E:\\Web Developer Bd\\Projects\\weather_app_practise\\package.json","includedInParent":true,"mtime":1625143526483},{"name":"E:\\Web Developer Bd\\Projects\\weather_app_practise\\node_modules\\regenerator-transform\\package.json","includedInParent":true,"mtime":1625143525868},{"name":"@babel/runtime/helpers/interopRequireWildcard","loc":{"line":9,"column":38},"parent":"E:\\Web Developer Bd\\Projects\\weather_app_practise\\node_modules\\regenerator-transform\\lib\\visit.js","resolved":"E:\\Web Developer Bd\\Projects\\weather_app_practise\\node_modules\\@babel\\runtime\\helpers\\interopRequireWildcard.js"},{"name":"@babel/runtime/helpers/interopRequireDefault","loc":{"line":11,"column":37},"parent":"E:\\Web Developer Bd\\Projects\\weather_app_practise\\node_modules\\regenerator-transform\\lib\\visit.js","resolved":"E:\\Web Developer Bd\\Projects\\weather_app_practise\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"},{"name":"assert","loc":{"line":13,"column":45},"parent":"E:\\Web Developer Bd\\Projects\\weather_app_practise\\node_modules\\regenerator-transform\\lib\\visit.js","resolved":"C:\\Users\\USER\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\assert\\assert.js"},{"name":"./hoist","loc":{"line":15,"column":21},"parent":"E:\\Web Developer Bd\\Projects\\weather_app_practise\\node_modules\\regenerator-transform\\lib\\visit.js","resolved":"E:\\Web Developer Bd\\Projects\\weather_app_practise\\node_modules\\regenerator-transform\\lib\\hoist.js"},{"name":"./emit","loc":{"line":17,"column":20},"parent":"E:\\Web Developer Bd\\Projects\\weather_app_practise\\node_modules\\regenerator-transform\\lib\\visit.js","resolved":"E:\\Web Developer Bd\\Projects\\weather_app_practise\\node_modules\\regenerator-transform\\lib\\emit.js"},{"name":"./replaceShorthandObjectMethod","loc":{"line":19,"column":67},"parent":"E:\\Web Developer Bd\\Projects\\weather_app_practise\\node_modules\\regenerator-transform\\lib\\visit.js","resolved":"E:\\Web Developer Bd\\Projects\\weather_app_practise\\node_modules\\regenerator-transform\\lib\\replaceShorthandObjectMethod.js"},{"name":"./util","loc":{"line":21,"column":43},"parent":"E:\\Web Developer Bd\\Projects\\weather_app_practise\\node_modules\\regenerator-transform\\lib\\visit.js","resolved":"E:\\Web Developer Bd\\Projects\\weather_app_practise\\node_modules\\regenerator-transform\\lib\\util.js"}],"generated":{"js":"/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _assert = _interopRequireDefault(require(\"assert\"));\n\nvar _hoist = require(\"./hoist\");\n\nvar _emit = require(\"./emit\");\n\nvar _replaceShorthandObjectMethod = _interopRequireDefault(require(\"./replaceShorthandObjectMethod\"));\n\nvar util = _interopRequireWildcard(require(\"./util\"));\n\nexports.getVisitor = function (_ref) {\n  var t = _ref.types;\n  return {\n    Method: function Method(path, state) {\n      var node = path.node;\n      if (!shouldRegenerate(node, state)) return;\n      var container = t.functionExpression(null, [], t.cloneNode(node.body, false), node.generator, node.async);\n      path.get(\"body\").set(\"body\", [t.returnStatement(t.callExpression(container, []))]); // Regardless of whether or not the wrapped function is a an async method\n      // or generator the outer function should not be\n\n      node.async = false;\n      node.generator = false; // Unwrap the wrapper IIFE's environment so super and this and such still work.\n\n      path.get(\"body.body.0.argument.callee\").unwrapFunctionEnvironment();\n    },\n    Function: {\n      exit: util.wrapWithTypes(t, function (path, state) {\n        var node = path.node;\n        if (!shouldRegenerate(node, state)) return; // if this is an ObjectMethod, we need to convert it to an ObjectProperty\n\n        path = (0, _replaceShorthandObjectMethod[\"default\"])(path);\n        node = path.node;\n        var contextId = path.scope.generateUidIdentifier(\"context\");\n        var argsId = path.scope.generateUidIdentifier(\"args\");\n        path.ensureBlock();\n        var bodyBlockPath = path.get(\"body\");\n\n        if (node.async) {\n          bodyBlockPath.traverse(awaitVisitor);\n        }\n\n        bodyBlockPath.traverse(functionSentVisitor, {\n          context: contextId\n        });\n        var outerBody = [];\n        var innerBody = [];\n        bodyBlockPath.get(\"body\").forEach(function (childPath) {\n          var node = childPath.node;\n\n          if (t.isExpressionStatement(node) && t.isStringLiteral(node.expression)) {\n            // Babylon represents directives like \"use strict\" as elements\n            // of a bodyBlockPath.node.directives array, but they could just\n            // as easily be represented (by other parsers) as traditional\n            // string-literal-valued expression statements, so we need to\n            // handle that here. (#248)\n            outerBody.push(node);\n          } else if (node && node._blockHoist != null) {\n            outerBody.push(node);\n          } else {\n            innerBody.push(node);\n          }\n        });\n\n        if (outerBody.length > 0) {\n          // Only replace the inner body if we actually hoisted any statements\n          // to the outer body.\n          bodyBlockPath.node.body = innerBody;\n        }\n\n        var outerFnExpr = getOuterFnExpr(path); // Note that getOuterFnExpr has the side-effect of ensuring that the\n        // function has a name (so node.id will always be an Identifier), even\n        // if a temporary name has to be synthesized.\n\n        t.assertIdentifier(node.id);\n        var innerFnId = t.identifier(node.id.name + \"$\"); // Turn all declarations into vars, and replace the original\n        // declarations with equivalent assignment expressions.\n\n        var vars = (0, _hoist.hoist)(path);\n        var context = {\n          usesThis: false,\n          usesArguments: false,\n          getArgsId: function getArgsId() {\n            return t.clone(argsId);\n          }\n        };\n        path.traverse(argumentsThisVisitor, context);\n\n        if (context.usesArguments) {\n          vars = vars || t.variableDeclaration(\"var\", []);\n          vars.declarations.push(t.variableDeclarator(t.clone(argsId), t.identifier(\"arguments\")));\n        }\n\n        var emitter = new _emit.Emitter(contextId);\n        emitter.explode(path.get(\"body\"));\n\n        if (vars && vars.declarations.length > 0) {\n          outerBody.push(vars);\n        }\n\n        var wrapArgs = [emitter.getContextFunction(innerFnId)];\n        var tryLocsList = emitter.getTryLocsList();\n\n        if (node.generator) {\n          wrapArgs.push(outerFnExpr);\n        } else if (context.usesThis || tryLocsList || node.async) {\n          // Async functions that are not generators don't care about the\n          // outer function because they don't need it to be marked and don't\n          // inherit from its .prototype.\n          wrapArgs.push(t.nullLiteral());\n        }\n\n        if (context.usesThis) {\n          wrapArgs.push(t.thisExpression());\n        } else if (tryLocsList || node.async) {\n          wrapArgs.push(t.nullLiteral());\n        }\n\n        if (tryLocsList) {\n          wrapArgs.push(tryLocsList);\n        } else if (node.async) {\n          wrapArgs.push(t.nullLiteral());\n        }\n\n        if (node.async) {\n          // Rename any locally declared \"Promise\" variable,\n          // to use the global one.\n          var currentScope = path.scope;\n\n          do {\n            if (currentScope.hasOwnBinding(\"Promise\")) currentScope.rename(\"Promise\");\n          } while (currentScope = currentScope.parent);\n\n          wrapArgs.push(t.identifier(\"Promise\"));\n        }\n\n        var wrapCall = t.callExpression(util.runtimeProperty(node.async ? \"async\" : \"wrap\"), wrapArgs);\n        outerBody.push(t.returnStatement(wrapCall));\n        node.body = t.blockStatement(outerBody); // We injected a few new variable declarations (for every hoisted var),\n        // so we need to add them to the scope.\n\n        path.get(\"body.body\").forEach(function (p) {\n          return p.scope.registerDeclaration(p);\n        });\n        var oldDirectives = bodyBlockPath.node.directives;\n\n        if (oldDirectives) {\n          // Babylon represents directives like \"use strict\" as elements of\n          // a bodyBlockPath.node.directives array. (#248)\n          node.body.directives = oldDirectives;\n        }\n\n        var wasGeneratorFunction = node.generator;\n\n        if (wasGeneratorFunction) {\n          node.generator = false;\n        }\n\n        if (node.async) {\n          node.async = false;\n        }\n\n        if (wasGeneratorFunction && t.isExpression(node)) {\n          util.replaceWithOrRemove(path, t.callExpression(util.runtimeProperty(\"mark\"), [node]));\n          path.addComment(\"leading\", \"#__PURE__\");\n        }\n\n        var insertedLocs = emitter.getInsertedLocs();\n        path.traverse({\n          NumericLiteral: function NumericLiteral(path) {\n            if (!insertedLocs.has(path.node)) {\n              return;\n            }\n\n            path.replaceWith(t.numericLiteral(path.node.value));\n          }\n        }); // Generators are processed in 'exit' handlers so that regenerator only has to run on\n        // an ES5 AST, but that means traversal will not pick up newly inserted references\n        // to things like 'regeneratorRuntime'. To avoid this, we explicitly requeue.\n\n        path.requeue();\n      })\n    }\n  };\n}; // Check if a node should be transformed by regenerator\n\n\nfunction shouldRegenerate(node, state) {\n  if (node.generator) {\n    if (node.async) {\n      // Async generator\n      return state.opts.asyncGenerators !== false;\n    } else {\n      // Plain generator\n      return state.opts.generators !== false;\n    }\n  } else if (node.async) {\n    // Async function\n    return state.opts.async !== false;\n  } else {\n    // Not a generator or async function.\n    return false;\n  }\n} // Given a NodePath for a Function, return an Expression node that can be\n// used to refer reliably to the function object from inside the function.\n// This expression is essentially a replacement for arguments.callee, with\n// the key advantage that it works in strict mode.\n\n\nfunction getOuterFnExpr(funPath) {\n  var t = util.getTypes();\n  var node = funPath.node;\n  t.assertFunction(node);\n\n  if (!node.id) {\n    // Default-exported function declarations, and function expressions may not\n    // have a name to reference, so we explicitly add one.\n    node.id = funPath.scope.parent.generateUidIdentifier(\"callee\");\n  }\n\n  if (node.generator && // Non-generator functions don't need to be marked.\n  t.isFunctionDeclaration(node)) {\n    // Return the identifier returned by runtime.mark(<node.id>).\n    return getMarkedFunctionId(funPath);\n  }\n\n  return t.clone(node.id);\n}\n\nvar markInfo = new WeakMap();\n\nfunction getMarkInfo(node) {\n  if (!markInfo.has(node)) {\n    markInfo.set(node, {});\n  }\n\n  return markInfo.get(node);\n}\n\nfunction getMarkedFunctionId(funPath) {\n  var t = util.getTypes();\n  var node = funPath.node;\n  t.assertIdentifier(node.id);\n  var blockPath = funPath.findParent(function (path) {\n    return path.isProgram() || path.isBlockStatement();\n  });\n\n  if (!blockPath) {\n    return node.id;\n  }\n\n  var block = blockPath.node;\n\n  _assert[\"default\"].ok(Array.isArray(block.body));\n\n  var info = getMarkInfo(block);\n\n  if (!info.decl) {\n    info.decl = t.variableDeclaration(\"var\", []);\n    blockPath.unshiftContainer(\"body\", info.decl);\n    info.declPath = blockPath.get(\"body.0\");\n  }\n\n  _assert[\"default\"].strictEqual(info.declPath.node, info.decl); // Get a new unique identifier for our marked variable.\n\n\n  var markedId = blockPath.scope.generateUidIdentifier(\"marked\");\n  var markCallExp = t.callExpression(util.runtimeProperty(\"mark\"), [t.clone(node.id)]);\n  var index = info.decl.declarations.push(t.variableDeclarator(markedId, markCallExp)) - 1;\n  var markCallExpPath = info.declPath.get(\"declarations.\" + index + \".init\");\n\n  _assert[\"default\"].strictEqual(markCallExpPath.node, markCallExp);\n\n  markCallExpPath.addComment(\"leading\", \"#__PURE__\");\n  return t.clone(markedId);\n}\n\nvar argumentsThisVisitor = {\n  \"FunctionExpression|FunctionDeclaration|Method\": function FunctionExpressionFunctionDeclarationMethod(path) {\n    path.skip();\n  },\n  Identifier: function Identifier(path, state) {\n    if (path.node.name === \"arguments\" && util.isReference(path)) {\n      util.replaceWithOrRemove(path, state.getArgsId());\n      state.usesArguments = true;\n    }\n  },\n  ThisExpression: function ThisExpression(path, state) {\n    state.usesThis = true;\n  }\n};\nvar functionSentVisitor = {\n  MetaProperty: function MetaProperty(path) {\n    var node = path.node;\n\n    if (node.meta.name === \"function\" && node.property.name === \"sent\") {\n      var t = util.getTypes();\n      util.replaceWithOrRemove(path, t.memberExpression(t.clone(this.context), t.identifier(\"_sent\")));\n    }\n  }\n};\nvar awaitVisitor = {\n  Function: function Function(path) {\n    path.skip(); // Don't descend into nested function scopes.\n  },\n  AwaitExpression: function AwaitExpression(path) {\n    var t = util.getTypes(); // Convert await expressions to yield expressions.\n\n    var argument = path.node.argument; // Transforming `await x` to `yield regeneratorRuntime.awrap(x)`\n    // causes the argument to be wrapped in such a way that the runtime\n    // can distinguish between awaited and merely yielded values.\n\n    util.replaceWithOrRemove(path, t.yieldExpression(t.callExpression(util.runtimeProperty(\"awrap\"), [argument]), false));\n  }\n};"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/regenerator-transform/lib/visit.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}}],"sources":{"node_modules/regenerator-transform/lib/visit.js":"/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _assert = _interopRequireDefault(require(\"assert\"));\n\nvar _hoist = require(\"./hoist\");\n\nvar _emit = require(\"./emit\");\n\nvar _replaceShorthandObjectMethod = _interopRequireDefault(require(\"./replaceShorthandObjectMethod\"));\n\nvar util = _interopRequireWildcard(require(\"./util\"));\n\nexports.getVisitor = function (_ref) {\n  var t = _ref.types;\n  return {\n    Method: function Method(path, state) {\n      var node = path.node;\n      if (!shouldRegenerate(node, state)) return;\n      var container = t.functionExpression(null, [], t.cloneNode(node.body, false), node.generator, node.async);\n      path.get(\"body\").set(\"body\", [t.returnStatement(t.callExpression(container, []))]); // Regardless of whether or not the wrapped function is a an async method\n      // or generator the outer function should not be\n\n      node.async = false;\n      node.generator = false; // Unwrap the wrapper IIFE's environment so super and this and such still work.\n\n      path.get(\"body.body.0.argument.callee\").unwrapFunctionEnvironment();\n    },\n    Function: {\n      exit: util.wrapWithTypes(t, function (path, state) {\n        var node = path.node;\n        if (!shouldRegenerate(node, state)) return; // if this is an ObjectMethod, we need to convert it to an ObjectProperty\n\n        path = (0, _replaceShorthandObjectMethod[\"default\"])(path);\n        node = path.node;\n        var contextId = path.scope.generateUidIdentifier(\"context\");\n        var argsId = path.scope.generateUidIdentifier(\"args\");\n        path.ensureBlock();\n        var bodyBlockPath = path.get(\"body\");\n\n        if (node.async) {\n          bodyBlockPath.traverse(awaitVisitor);\n        }\n\n        bodyBlockPath.traverse(functionSentVisitor, {\n          context: contextId\n        });\n        var outerBody = [];\n        var innerBody = [];\n        bodyBlockPath.get(\"body\").forEach(function (childPath) {\n          var node = childPath.node;\n\n          if (t.isExpressionStatement(node) && t.isStringLiteral(node.expression)) {\n            // Babylon represents directives like \"use strict\" as elements\n            // of a bodyBlockPath.node.directives array, but they could just\n            // as easily be represented (by other parsers) as traditional\n            // string-literal-valued expression statements, so we need to\n            // handle that here. (#248)\n            outerBody.push(node);\n          } else if (node && node._blockHoist != null) {\n            outerBody.push(node);\n          } else {\n            innerBody.push(node);\n          }\n        });\n\n        if (outerBody.length > 0) {\n          // Only replace the inner body if we actually hoisted any statements\n          // to the outer body.\n          bodyBlockPath.node.body = innerBody;\n        }\n\n        var outerFnExpr = getOuterFnExpr(path); // Note that getOuterFnExpr has the side-effect of ensuring that the\n        // function has a name (so node.id will always be an Identifier), even\n        // if a temporary name has to be synthesized.\n\n        t.assertIdentifier(node.id);\n        var innerFnId = t.identifier(node.id.name + \"$\"); // Turn all declarations into vars, and replace the original\n        // declarations with equivalent assignment expressions.\n\n        var vars = (0, _hoist.hoist)(path);\n        var context = {\n          usesThis: false,\n          usesArguments: false,\n          getArgsId: function getArgsId() {\n            return t.clone(argsId);\n          }\n        };\n        path.traverse(argumentsThisVisitor, context);\n\n        if (context.usesArguments) {\n          vars = vars || t.variableDeclaration(\"var\", []);\n          vars.declarations.push(t.variableDeclarator(t.clone(argsId), t.identifier(\"arguments\")));\n        }\n\n        var emitter = new _emit.Emitter(contextId);\n        emitter.explode(path.get(\"body\"));\n\n        if (vars && vars.declarations.length > 0) {\n          outerBody.push(vars);\n        }\n\n        var wrapArgs = [emitter.getContextFunction(innerFnId)];\n        var tryLocsList = emitter.getTryLocsList();\n\n        if (node.generator) {\n          wrapArgs.push(outerFnExpr);\n        } else if (context.usesThis || tryLocsList || node.async) {\n          // Async functions that are not generators don't care about the\n          // outer function because they don't need it to be marked and don't\n          // inherit from its .prototype.\n          wrapArgs.push(t.nullLiteral());\n        }\n\n        if (context.usesThis) {\n          wrapArgs.push(t.thisExpression());\n        } else if (tryLocsList || node.async) {\n          wrapArgs.push(t.nullLiteral());\n        }\n\n        if (tryLocsList) {\n          wrapArgs.push(tryLocsList);\n        } else if (node.async) {\n          wrapArgs.push(t.nullLiteral());\n        }\n\n        if (node.async) {\n          // Rename any locally declared \"Promise\" variable,\n          // to use the global one.\n          var currentScope = path.scope;\n\n          do {\n            if (currentScope.hasOwnBinding(\"Promise\")) currentScope.rename(\"Promise\");\n          } while (currentScope = currentScope.parent);\n\n          wrapArgs.push(t.identifier(\"Promise\"));\n        }\n\n        var wrapCall = t.callExpression(util.runtimeProperty(node.async ? \"async\" : \"wrap\"), wrapArgs);\n        outerBody.push(t.returnStatement(wrapCall));\n        node.body = t.blockStatement(outerBody); // We injected a few new variable declarations (for every hoisted var),\n        // so we need to add them to the scope.\n\n        path.get(\"body.body\").forEach(function (p) {\n          return p.scope.registerDeclaration(p);\n        });\n        var oldDirectives = bodyBlockPath.node.directives;\n\n        if (oldDirectives) {\n          // Babylon represents directives like \"use strict\" as elements of\n          // a bodyBlockPath.node.directives array. (#248)\n          node.body.directives = oldDirectives;\n        }\n\n        var wasGeneratorFunction = node.generator;\n\n        if (wasGeneratorFunction) {\n          node.generator = false;\n        }\n\n        if (node.async) {\n          node.async = false;\n        }\n\n        if (wasGeneratorFunction && t.isExpression(node)) {\n          util.replaceWithOrRemove(path, t.callExpression(util.runtimeProperty(\"mark\"), [node]));\n          path.addComment(\"leading\", \"#__PURE__\");\n        }\n\n        var insertedLocs = emitter.getInsertedLocs();\n        path.traverse({\n          NumericLiteral: function NumericLiteral(path) {\n            if (!insertedLocs.has(path.node)) {\n              return;\n            }\n\n            path.replaceWith(t.numericLiteral(path.node.value));\n          }\n        }); // Generators are processed in 'exit' handlers so that regenerator only has to run on\n        // an ES5 AST, but that means traversal will not pick up newly inserted references\n        // to things like 'regeneratorRuntime'. To avoid this, we explicitly requeue.\n\n        path.requeue();\n      })\n    }\n  };\n}; // Check if a node should be transformed by regenerator\n\n\nfunction shouldRegenerate(node, state) {\n  if (node.generator) {\n    if (node.async) {\n      // Async generator\n      return state.opts.asyncGenerators !== false;\n    } else {\n      // Plain generator\n      return state.opts.generators !== false;\n    }\n  } else if (node.async) {\n    // Async function\n    return state.opts.async !== false;\n  } else {\n    // Not a generator or async function.\n    return false;\n  }\n} // Given a NodePath for a Function, return an Expression node that can be\n// used to refer reliably to the function object from inside the function.\n// This expression is essentially a replacement for arguments.callee, with\n// the key advantage that it works in strict mode.\n\n\nfunction getOuterFnExpr(funPath) {\n  var t = util.getTypes();\n  var node = funPath.node;\n  t.assertFunction(node);\n\n  if (!node.id) {\n    // Default-exported function declarations, and function expressions may not\n    // have a name to reference, so we explicitly add one.\n    node.id = funPath.scope.parent.generateUidIdentifier(\"callee\");\n  }\n\n  if (node.generator && // Non-generator functions don't need to be marked.\n  t.isFunctionDeclaration(node)) {\n    // Return the identifier returned by runtime.mark(<node.id>).\n    return getMarkedFunctionId(funPath);\n  }\n\n  return t.clone(node.id);\n}\n\nvar markInfo = new WeakMap();\n\nfunction getMarkInfo(node) {\n  if (!markInfo.has(node)) {\n    markInfo.set(node, {});\n  }\n\n  return markInfo.get(node);\n}\n\nfunction getMarkedFunctionId(funPath) {\n  var t = util.getTypes();\n  var node = funPath.node;\n  t.assertIdentifier(node.id);\n  var blockPath = funPath.findParent(function (path) {\n    return path.isProgram() || path.isBlockStatement();\n  });\n\n  if (!blockPath) {\n    return node.id;\n  }\n\n  var block = blockPath.node;\n\n  _assert[\"default\"].ok(Array.isArray(block.body));\n\n  var info = getMarkInfo(block);\n\n  if (!info.decl) {\n    info.decl = t.variableDeclaration(\"var\", []);\n    blockPath.unshiftContainer(\"body\", info.decl);\n    info.declPath = blockPath.get(\"body.0\");\n  }\n\n  _assert[\"default\"].strictEqual(info.declPath.node, info.decl); // Get a new unique identifier for our marked variable.\n\n\n  var markedId = blockPath.scope.generateUidIdentifier(\"marked\");\n  var markCallExp = t.callExpression(util.runtimeProperty(\"mark\"), [t.clone(node.id)]);\n  var index = info.decl.declarations.push(t.variableDeclarator(markedId, markCallExp)) - 1;\n  var markCallExpPath = info.declPath.get(\"declarations.\" + index + \".init\");\n\n  _assert[\"default\"].strictEqual(markCallExpPath.node, markCallExp);\n\n  markCallExpPath.addComment(\"leading\", \"#__PURE__\");\n  return t.clone(markedId);\n}\n\nvar argumentsThisVisitor = {\n  \"FunctionExpression|FunctionDeclaration|Method\": function FunctionExpressionFunctionDeclarationMethod(path) {\n    path.skip();\n  },\n  Identifier: function Identifier(path, state) {\n    if (path.node.name === \"arguments\" && util.isReference(path)) {\n      util.replaceWithOrRemove(path, state.getArgsId());\n      state.usesArguments = true;\n    }\n  },\n  ThisExpression: function ThisExpression(path, state) {\n    state.usesThis = true;\n  }\n};\nvar functionSentVisitor = {\n  MetaProperty: function MetaProperty(path) {\n    var node = path.node;\n\n    if (node.meta.name === \"function\" && node.property.name === \"sent\") {\n      var t = util.getTypes();\n      util.replaceWithOrRemove(path, t.memberExpression(t.clone(this.context), t.identifier(\"_sent\")));\n    }\n  }\n};\nvar awaitVisitor = {\n  Function: function Function(path) {\n    path.skip(); // Don't descend into nested function scopes.\n  },\n  AwaitExpression: function AwaitExpression(path) {\n    var t = util.getTypes(); // Convert await expressions to yield expressions.\n\n    var argument = path.node.argument; // Transforming `await x` to `yield regeneratorRuntime.awrap(x)`\n    // causes the argument to be wrapped in such a way that the runtime\n    // can distinguish between awaited and merely yielded values.\n\n    util.replaceWithOrRemove(path, t.yieldExpression(t.callExpression(util.runtimeProperty(\"awrap\"), [argument]), false));\n  }\n};"},"lineCount":326}},"error":null,"hash":"9fbadaaf346fb089acadb4f840177ee6","cacheData":{"env":{}}}