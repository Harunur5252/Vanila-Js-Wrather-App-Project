{"id":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","dependencies":[{"name":"E:\\Web Developer Bd\\Projects\\weather_app_practise\\package.json","includedInParent":true,"mtime":1625143526483},{"name":"E:\\Web Developer Bd\\Projects\\weather_app_practise\\node_modules\\regenerator-transform\\package.json","includedInParent":true,"mtime":1625143525868},{"name":"@babel/runtime/helpers/interopRequireWildcard","loc":{"line":3,"column":38},"parent":"E:\\Web Developer Bd\\Projects\\weather_app_practise\\node_modules\\regenerator-transform\\lib\\replaceShorthandObjectMethod.js","resolved":"E:\\Web Developer Bd\\Projects\\weather_app_practise\\node_modules\\@babel\\runtime\\helpers\\interopRequireWildcard.js"},{"name":"./util","loc":{"line":8,"column":43},"parent":"E:\\Web Developer Bd\\Projects\\weather_app_practise\\node_modules\\regenerator-transform\\lib\\replaceShorthandObjectMethod.js","resolved":"E:\\Web Developer Bd\\Projects\\weather_app_practise\\node_modules\\regenerator-transform\\lib\\util.js"}],"generated":{"js":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports[\"default\"] = replaceShorthandObjectMethod;\n\nvar util = _interopRequireWildcard(require(\"./util\"));\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// this function converts a shorthand object generator method into a normal\n// (non-shorthand) object property which is a generator function expression. for\n// example, this:\n//\n//  var foo = {\n//    *bar(baz) { return 5; }\n//  }\n//\n// should be replaced with:\n//\n//  var foo = {\n//    bar: function*(baz) { return 5; }\n//  }\n//\n// to do this, it clones the parameter array and the body of the object generator\n// method into a new FunctionExpression.\n//\n// this method can be passed any Function AST node path, and it will return\n// either:\n//   a) the path that was passed in (iff the path did not need to be replaced) or\n//   b) the path of the new FunctionExpression that was created as a replacement\n//     (iff the path did need to be replaced)\n//\n// In either case, though, the caller can count on the fact that the return value\n// is a Function AST node path.\n//\n// If this function is called with an AST node path that is not a Function (or with an\n// argument that isn't an AST node path), it will throw an error.\nfunction replaceShorthandObjectMethod(path) {\n  var t = util.getTypes();\n\n  if (!path.node || !t.isFunction(path.node)) {\n    throw new Error(\"replaceShorthandObjectMethod can only be called on Function AST node paths.\");\n  } // this function only replaces shorthand object methods (called ObjectMethod\n  // in Babel-speak).\n\n\n  if (!t.isObjectMethod(path.node)) {\n    return path;\n  } // this function only replaces generators.\n\n\n  if (!path.node.generator) {\n    return path;\n  }\n\n  var parameters = path.node.params.map(function (param) {\n    return t.cloneDeep(param);\n  });\n  var functionExpression = t.functionExpression(null, // id\n  parameters, // params\n  t.cloneDeep(path.node.body), // body\n  path.node.generator, path.node.async);\n  util.replaceWithOrRemove(path, t.objectProperty(t.cloneDeep(path.node.key), // key\n  functionExpression, //value\n  path.node.computed, // computed\n  false // shorthand\n  )); // path now refers to the ObjectProperty AST node path, but we want to return a\n  // Function AST node path for the function expression we created. we know that\n  // the FunctionExpression we just created is the value of the ObjectProperty,\n  // so return the \"value\" path off of this path.\n\n  return path.get(\"value\");\n}"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}}],"sources":{"node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports[\"default\"] = replaceShorthandObjectMethod;\n\nvar util = _interopRequireWildcard(require(\"./util\"));\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// this function converts a shorthand object generator method into a normal\n// (non-shorthand) object property which is a generator function expression. for\n// example, this:\n//\n//  var foo = {\n//    *bar(baz) { return 5; }\n//  }\n//\n// should be replaced with:\n//\n//  var foo = {\n//    bar: function*(baz) { return 5; }\n//  }\n//\n// to do this, it clones the parameter array and the body of the object generator\n// method into a new FunctionExpression.\n//\n// this method can be passed any Function AST node path, and it will return\n// either:\n//   a) the path that was passed in (iff the path did not need to be replaced) or\n//   b) the path of the new FunctionExpression that was created as a replacement\n//     (iff the path did need to be replaced)\n//\n// In either case, though, the caller can count on the fact that the return value\n// is a Function AST node path.\n//\n// If this function is called with an AST node path that is not a Function (or with an\n// argument that isn't an AST node path), it will throw an error.\nfunction replaceShorthandObjectMethod(path) {\n  var t = util.getTypes();\n\n  if (!path.node || !t.isFunction(path.node)) {\n    throw new Error(\"replaceShorthandObjectMethod can only be called on Function AST node paths.\");\n  } // this function only replaces shorthand object methods (called ObjectMethod\n  // in Babel-speak).\n\n\n  if (!t.isObjectMethod(path.node)) {\n    return path;\n  } // this function only replaces generators.\n\n\n  if (!path.node.generator) {\n    return path;\n  }\n\n  var parameters = path.node.params.map(function (param) {\n    return t.cloneDeep(param);\n  });\n  var functionExpression = t.functionExpression(null, // id\n  parameters, // params\n  t.cloneDeep(path.node.body), // body\n  path.node.generator, path.node.async);\n  util.replaceWithOrRemove(path, t.objectProperty(t.cloneDeep(path.node.key), // key\n  functionExpression, //value\n  path.node.computed, // computed\n  false // shorthand\n  )); // path now refers to the ObjectProperty AST node path, but we want to return a\n  // Function AST node path for the function expression we created. we know that\n  // the FunctionExpression we just created is the value of the ObjectProperty,\n  // so return the \"value\" path off of this path.\n\n  return path.get(\"value\");\n}"},"lineCount":79}},"error":null,"hash":"913765caf7a9e116840f858478a72901","cacheData":{"env":{}}}